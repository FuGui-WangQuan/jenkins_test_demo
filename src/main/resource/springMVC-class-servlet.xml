<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <!-- 为HelloController设置一个映射路径 /hello-->
    <bean name="/hello" class="com.zcy.spring.controller.HelloController"/>

    <!-- 开启包扫描器 -->
    <!-- 避免重复扫描 导致事务失效-->
    <context:component-scan base-package="com.zcy.spring.controller"/>

    <!-- 开启SpringMVC框架注解的支持 -->
    <!--开启url注解 绑定handle和url 注意要选择mvc下的而不是cache-->
    <!--开启json转换器方式一-->
    <mvc:annotation-driven conversion-service="conversionService2"/>


    <bean id="conversionService1" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <bean class="com.zcy.spring.converter.DateConvert"/>
        </property>
    </bean>

    <bean id="conversionService2" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <bean class="com.zcy.spring.formatter.DateFormatter"/>
        </property>
    </bean>

    <!--开启json转换器方式二 一般不写-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!--
     可以不写
     &lt;!&ndash; 处理器映射器 将处理器的Handle的name作为url进行查找 &ndash;&gt;
     <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>

     &lt;!&ndash; 处理器适配器 配置对处理器中的handleRequest()方法的调用 &ndash;&gt;
     <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>-->

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 只要SpringMVC 返回String ModelAndView 就会自动为jsp文件名增加前后缀-->
        <!-- 为视图解析器设置前缀 设置jsp文件路径 前缀-->
        <property name="prefix" value="/jsp/"/>
        <!-- 为视图解析器设置后缀 设置jsp文件路径 前=后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>


    <!--配置静态资源目录  放开DispatchServlet拦截-->
    <mvc:resources mapping="/js/*" location="/js/"/>
    <mvc:resources mapping="/html/*" location="/html/"/>

    <!--
      声明文件解析器
      id必须设置为multipartResolver
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置文件格式-->
        <property name="defaultEncoding" value="utf-8"/>
        <!--设置文件上传的最大值-->
        <property name="maxUploadSize" value="1024000000"/>
    </bean>

    <!--声明拦截器集合-->
    <mvc:interceptors>
        <!--拦截器从上到下 代表拦截器最先拦截的次序-->
        <!--全局拦截器-->
        <bean class="com.zcy.spring.interceptor.CustomerInterceptor"/>
        <mvc:interceptor>
            <!-- 拦截路径下所有 -->
            <mvc:mapping path="/**"/>
            <!-- 排除拦截的路径 -->
            <mvc:exclude-mapping path="/findStudentById2"/>
            <!--
                声明单个的定制的interceptor时注意顺序：
                <mvc:mapping>
                <mvc:exclude-mapping>
                <bean>
             -->
            <bean class="com.zcy.spring.interceptor.Interceptor1"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/findStudentById"/>
            <bean class="com.zcy.spring.interceptor.Interceptor2"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!--第三种： 配置全局异常 最不常用 因为很多前端调用都是html ajax-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 设置异常处理 jsp界面-->
        <property name="defaultErrorView" value="error"/>
        <!-- 设置异常变量名 设置到request属性ex  Exception-->
        <property name="exceptionAttribute" value="ex"/>
    </bean>

    <!-- 开启定时注解配置 -->
    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
    <!-- pool-size定时任务线程池大小 -->
    <task:scheduler id="qbScheduler" pool-size="10"/>
    <!-- 将定时任务加入容器 -->
    <context:component-scan base-package="com.zcy.spring.task"/>
</beans>